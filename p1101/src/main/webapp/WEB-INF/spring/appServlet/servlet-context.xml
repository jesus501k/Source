<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>

	<resources mapping="/common/**" location="/resources/common/"/>
	<resources mapping="/p1101/**" location="/resources/p1101/"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/"/>
		<beans:property name="suffix" value=".jsp"/>
	</beans:bean>

	<!-- component-scan -->
	<context:component-scan base-package="org.p1101"/>

	<!-- property location -->
	<!--
	<context:property-placeholder location="/WEB-INF/classes/*.properties"/>
	-->

	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
            <beans:list>
                <beans:value>/WEB-INF/classes/log4jdbc.log4j2.properties</beans:value>
                <beans:value>/WEB-INF/classes/jdbc-#{systemProperties['spring.profiles.active']}.properties</beans:value>
                <beans:value>/WEB-INF/classes/config-#{systemProperties['spring.profiles.active']}.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

	<!-- DriverManagerDataSource -->
	<beans:bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"/>
		<beans:property name="url" value="${jdbc.url}"/>
		<beans:property name="username" value="${jdbc.username}"/>
		<beans:property name="password" value="${jdbc.password}"/>
	</beans:bean>

	<!-- SqlSessionFactoryBean -->
	<beans:bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="driverManagerDataSource"/>
		<beans:property name="mapperLocations" value="classpath:mybatis/mappers/**/*Mapper.xml"/>
	</beans:bean>

	<!-- SqlSessionTemplate -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
	</beans:bean>

	<!-- transactionManager -->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="driverManagerDataSource"></beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- multipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- <beans:property name="maxUploadSize" value="1073741824"></beans:property> -->
    </beans:bean>

</beans:beans>









